{
  "version": 3,
  "sources": [
    "../src/effect-carousel.esm.js"
  ],
  "names": [
    "swiper",
    "on",
    "params",
    "effect",
    "classNames",
    "push",
    "containerModifierClass",
    "overwriteParams",
    "watchSlidesProgress",
    "centeredSlides",
    "Object",
    "assign",
    "originalParams",
    "zIndexMax",
    "slides",
    "length",
    "i",
    "slideEl",
    "slideProgress",
    "progress",
    "absProgress",
    "Math",
    "abs",
    "modify",
    "opacityEls",
    "querySelectorAll",
    "translate",
    "scale",
    "zIndex",
    "round",
    "style",
    "transform",
    "opacity",
    "forEach",
    "opacityEl",
    "s",
    "duration",
    "transitionDuration"
  ],
  "mappings": ";;;;;;;;;;;;;sPAAe,UAAwBA,OAAEA,EAAMC,GAAEA,IAC/CA,EAAG,cAAc,KACf,GAA6B,aAAzBD,EAAOE,OAAOC,OAAuB,OACzCH,EAAOI,WAAWC,KAAK,GAAGL,EAAOE,OAAOI,kCACxC,MAAMC,EAAkB,CACtBC,qBAAqB,EACrBC,gBAAgB,GAGlBC,OAAOC,OAAOX,EAAOE,OAAQK,GAC7BG,OAAOC,OAAOX,EAAOY,eAAgBL,MAEvCN,EAAG,YAAY,KACb,GAA6B,aAAzBD,EAAOE,OAAOC,OAAuB,OACzC,MACMU,EAAYb,EAAOc,OAAOC,OAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAOc,OAAOC,OAAQC,GAAK,EAAG,CAChD,MAAMC,EAAUjB,EAAOc,OAAOE,GACxBE,EAAgBlB,EAAOc,OAAOE,GAAGG,SACjCC,EAAcC,KAAKC,IAAIJ,GAC7B,IAAIK,EAAS,EACTH,EAAc,IAChBG,EAA6B,IAAnBH,EAAc,GAAW,GAErC,MAAMI,EAAaP,EAAQQ,iBACzB,oCAEIC,EAAeR,EAAgBK,EAAS,GAA5B,IACZI,EAAQ,EAdE,GAcEP,EACZQ,EAASf,EAAYQ,KAAKC,IAAID,KAAKQ,MAAMX,IAC/CD,EAAQa,MAAMC,UAAY,cAAcL,YAAoBC,KAC5DV,EAAQa,MAAMF,OAASA,EAErBX,EAAQa,MAAME,QADZZ,EAAc,EACQ,EAEA,EAG1BI,EAAWS,SAASC,IAClBA,EAAUJ,MAAME,QAAU,EAAIZ,EAAc,SAKlDnB,EAAG,iBAAiB,CAACkC,EAAGC,KACtB,GAA6B,aAAzBpC,EAAOE,OAAOC,OAClB,IAAK,IAAIa,EAAI,EAAGA,EAAIhB,EAAOc,OAAOC,OAAQC,GAAK,EAAG,CAChD,MAAMC,EAAUjB,EAAOc,OAAOE,GACxBQ,EAAaP,EAAQQ,iBACzB,oCAEFR,EAAQa,MAAMO,mBAAqB,GAAGD,MACtCZ,EAAWS,SAASC,IAClBA,EAAUJ,MAAMO,mBAAqB,GAAGD",
  "file": "effect-carousel.min.js",
  "sourcesContent": [
    "export default function CarouselSlider({ swiper, on }) {\n  on('beforeInit', () => {\n    if (swiper.params.effect !== 'carousel') return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}carousel`);\n    const overwriteParams = {\n      watchSlidesProgress: true,\n      centeredSlides: true,\n    };\n\n    Object.assign(swiper.params, overwriteParams);\n    Object.assign(swiper.originalParams, overwriteParams);\n  });\n  on('progress', () => {\n    if (swiper.params.effect !== 'carousel') return;\n    const scaleStep = 0.2;\n    const zIndexMax = swiper.slides.length;\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const slideProgress = swiper.slides[i].progress;\n      const absProgress = Math.abs(slideProgress);\n      let modify = 1;\n      if (absProgress > 1) {\n        modify = (absProgress - 1) * 0.3 + 1;\n      }\n      const opacityEls = slideEl.querySelectorAll(\n        '.swiper-carousel-animate-opacity',\n      );\n      const translate = `${slideProgress * modify * 50}%`;\n      const scale = 1 - absProgress * scaleStep;\n      const zIndex = zIndexMax - Math.abs(Math.round(slideProgress));\n      slideEl.style.transform = `translateX(${translate}) scale(${scale})`;\n      slideEl.style.zIndex = zIndex;\n      if (absProgress > 3) {\n        slideEl.style.opacity = 0;\n      } else {\n        slideEl.style.opacity = 1;\n      }\n\n      opacityEls.forEach((opacityEl) => {\n        opacityEl.style.opacity = 1 - absProgress / 3;\n      });\n    }\n  });\n\n  on('setTransition', (s, duration) => {\n    if (swiper.params.effect !== 'carousel') return;\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const opacityEls = slideEl.querySelectorAll(\n        '.swiper-carousel-animate-opacity',\n      );\n      slideEl.style.transitionDuration = `${duration}ms`;\n      opacityEls.forEach((opacityEl) => {\n        opacityEl.style.transitionDuration = `${duration}ms`;\n      });\n    }\n  });\n}\n"
  ]
}
