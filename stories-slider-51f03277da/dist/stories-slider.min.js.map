{"version":3,"sources":["../src/stories-slider.esm.js"],"names":["el","params","mainSwiperEl","querySelector","autoplayDuration","Swiper","EffectCube","onSlidesIndexesChange","mainSwiper","enabled","activeSubSwiperIndex","subSwipers","slideIndexesChangeRaf","isTouched","touchStartTime","touchStartTimeout","touchHoldDuration","autoplayStartTime","autoplayTimeLeft","autoplayTouchPaused","startAutoplay","swiper","durationForce","subSwiperIndex","indexOf","duration","storiesSliderAutoplayTimeout","setTimeout","isEnd","slideNext","stopAutoplay","clearTimeout","pauseAutoplay","Date","getTime","calcTranslate","$currentBullet","$el","find","activeIndex","children","remove","append","onSubSwiperSlideChange","removeClass","prevAll","addClass","nextAll","clientWidth","transition","transform","cancelAnimationFrame","requestAnimationFrame","setPerspectiveFix","classList","add","removePerspectiveFix","modules","effect","speed","cubeEffect","shadow","observer","on","transitionStart","sliderFirstMove","transitionEnd","init","resistanceRatio","slideChange","prevSubSwiper","currentSubSwiper","initMainSwiper","querySelectorAll","forEach","subSwiperEl","nested","allowTouchMove","touchStart","touchEnd","resumeAutoPlay","slides","paginationContainerEl","document","createElement","i","length","paginationBulletEl","appendChild","initSubSwiperPagination","slideEl","navLeftEl","navRightEl","addEventListener","isBeginning","slidePrev","initSubSwiperNavigation","push","destroy","subSwiper","destroySubSwiperNavigation","slideTo","mainIndex","subIndex","destroyed","enable","disable"],"mappings":"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","file":"stories-slider.min.js","sourcesContent":["/* eslint-disable no-shadow */\nexport default function createStoriesSlider(el, params = {}) {\n  const mainSwiperEl = el.querySelector('.swiper');\n  const {\n    autoplayDuration = 5000,\n    Swiper,\n    EffectCube,\n    onSlidesIndexesChange,\n  } = params;\n  let { enabled = true } = params;\n\n  let activeSubSwiperIndex = 0;\n\n  let mainSwiper;\n  const subSwipers = [];\n\n  let slideIndexesChangeRaf;\n\n  let isTouched;\n  let touchStartTime;\n  let touchStartTimeout;\n  let touchHoldDuration;\n  let autoplayStartTime;\n  let autoplayTimeLeft;\n  let autoplayTouchPaused;\n\n  const startAutoplay = (swiper, durationForce) => {\n    const subSwiperIndex = subSwipers.indexOf(swiper);\n    const duration =\n      typeof durationForce === 'undefined' ? autoplayDuration : durationForce;\n    autoplayTimeLeft = duration;\n    swiper.storiesSliderAutoplayTimeout = setTimeout(() => {\n      if (!swiper.isEnd) {\n        swiper.slideNext();\n      } else {\n        if (activeSubSwiperIndex !== subSwiperIndex) return;\n        if (!mainSwiper.isEnd) mainSwiper.slideNext();\n      }\n    }, duration);\n  };\n  const stopAutoplay = (swiper) => {\n    clearTimeout(swiper.storiesSliderAutoplayTimeout);\n  };\n  const pauseAutoplay = (swiper) => {\n    stopAutoplay(swiper);\n    const duration = autoplayTimeLeft || autoplayDuration;\n    autoplayTimeLeft = duration - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n\n    const calcTranslate = 1 - autoplayTimeLeft / autoplayDuration;\n    const $currentBullet = swiper.$el.find(\n      `.stories-slider-pagination-bullet:nth-child(${swiper.activeIndex + 1})`,\n    );\n\n    $currentBullet.children('span').remove();\n    $currentBullet.append(\n      `<span style=\"transform:translateX(${\n        -100 + calcTranslate * 100\n      }%)\"></span>`,\n    );\n  };\n  const resumeAutoPlay = (swiper) => {\n    if (swiper.isEnd && autoplayTimeLeft < 0) return;\n    autoplayStartTime = new Date().getTime();\n\n    startAutoplay(swiper, autoplayTimeLeft);\n    swiper.$el\n      .find(\n        `.stories-slider-pagination-bullet:nth-child(${\n          swiper.activeIndex + 1\n        })`,\n      )\n      .children('span')\n      .transform('translateX(0%)')\n      .transition(`${autoplayTimeLeft}ms`);\n  };\n\n  const onSubSwiperSlideChange = (swiper) => {\n    stopAutoplay(swiper);\n    startAutoplay(swiper);\n    autoplayStartTime = new Date().getTime();\n    swiper.$el\n      .find('.stories-slider-pagination-bullet-current')\n      .removeClass('stories-slider-pagination-bullet-current');\n    const $currentBullet = swiper.$el.find(\n      `.stories-slider-pagination-bullet:nth-child(${swiper.activeIndex + 1})`,\n    );\n    // prev bullets\n    $currentBullet\n      .prevAll()\n      .addClass('stories-slider-pagination-bullet-viewed')\n      .children('span')\n      .remove();\n    $currentBullet.prevAll().append('<span></span>');\n\n    // next bullets\n    $currentBullet\n      .nextAll()\n      .removeClass(\n        'stories-slider-pagination-bullet-viewed stories-slider-pagination-bullet-current',\n      )\n      .children('span')\n      .remove();\n    $currentBullet.nextAll().append('<span></span>');\n\n    // current bullet\n    $currentBullet\n      .removeClass('stories-slider-pagination-bullet-viewed')\n      .addClass('stories-slider-pagination-bullet-current')\n      .children('span')\n      .remove();\n    $currentBullet.append('<span></span>');\n    // eslint-disable-next-line\n    const __clientWidth = $currentBullet[0].clientWidth;\n    $currentBullet\n      .children('span')\n      .transition(`${autoplayDuration}ms`)\n      .transform('translateX(0%)');\n    if (onSlidesIndexesChange) {\n      cancelAnimationFrame(slideIndexesChangeRaf);\n      slideIndexesChangeRaf = requestAnimationFrame(() => {\n        onSlidesIndexesChange(activeSubSwiperIndex, swiper.activeIndex);\n      });\n    }\n  };\n\n  const initMainSwiper = () => {\n    const setPerspectiveFix = () => {\n      el.classList.add('stories-slider-perspective');\n    };\n    const removePerspectiveFix = () => {\n      el.classList.remove('stories-slider-perspective');\n    };\n    mainSwiper = new Swiper(mainSwiperEl, {\n      modules: typeof EffectCube !== 'undefined' ? [EffectCube] : [],\n      effect: 'cube',\n      speed: 500,\n      cubeEffect: {\n        shadow: false,\n      },\n      observer: true,\n      on: {\n        transitionStart() {\n          removePerspectiveFix();\n        },\n        sliderFirstMove() {\n          removePerspectiveFix();\n        },\n        transitionEnd() {\n          setPerspectiveFix();\n        },\n        init(mainSwiper) {\n          mainSwiper.params.resistanceRatio = 0.5;\n          setPerspectiveFix();\n        },\n        slideChange() {\n          const prevSubSwiper = subSwipers[activeSubSwiperIndex];\n          activeSubSwiperIndex = mainSwiper.activeIndex;\n          const currentSubSwiper = subSwipers[activeSubSwiperIndex];\n          stopAutoplay(prevSubSwiper);\n          startAutoplay(currentSubSwiper);\n          onSubSwiperSlideChange(currentSubSwiper, false);\n        },\n      },\n    });\n  };\n\n  const initSubSwiperPagination = (subSwiperEl) => {\n    const slides = subSwiperEl.querySelectorAll('.swiper-slide');\n    const paginationContainerEl = document.createElement('div');\n    paginationContainerEl.classList.add('stories-slider-pagination');\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const paginationBulletEl = document.createElement('div');\n      paginationBulletEl.classList.add('stories-slider-pagination-bullet');\n      paginationBulletEl.appendChild(document.createElement('span'));\n      paginationContainerEl.appendChild(paginationBulletEl);\n    }\n\n    subSwiperEl.appendChild(paginationContainerEl);\n  };\n  const destroySubSwiperPagination = (swiper) => {\n    swiper.$el\n      .find('.stories-slider-pagination, .stories-slider-pagination-bullet')\n      .remove();\n  };\n  const initSubSwiperNavigation = (subSwiperEl, swiper) => {\n    const slides = subSwiperEl.querySelectorAll('.swiper-slide');\n\n    slides.forEach((slideEl) => {\n      const navLeftEl = document.createElement('div');\n      const navRightEl = document.createElement('div');\n\n      navLeftEl.classList.add(\n        'stories-slider-button',\n        'stories-slider-button-prev',\n      );\n      navRightEl.classList.add(\n        'stories-slider-button',\n        'stories-slider-button-next',\n      );\n\n      slideEl.appendChild(navLeftEl);\n      slideEl.appendChild(navRightEl);\n\n      const onNavLeftClick = () => {\n        if (touchHoldDuration > 200) return;\n        if (swiper.isBeginning) {\n          mainSwiper.slidePrev();\n          return;\n        }\n        swiper.slidePrev();\n      };\n      const onNavRightClick = () => {\n        if (touchHoldDuration > 200) return;\n        if (swiper.isEnd) {\n          mainSwiper.slideNext();\n          return;\n        }\n        swiper.slideNext();\n      };\n\n      navLeftEl.addEventListener('click', onNavLeftClick);\n      navRightEl.addEventListener('click', onNavRightClick);\n    });\n  };\n\n  const destroySubSwiperNavigation = (swiper) => {\n    swiper.slides.find('.stories-slider-button').remove();\n  };\n  const initSubSwipers = () => {\n    el.querySelectorAll('.swiper .swiper').forEach(\n      (subSwiperEl, subSwiperIndex) => {\n        const swiper = new Swiper(subSwiperEl, {\n          speed: 1,\n          nested: true,\n          allowTouchMove: false,\n          observer: true,\n          on: {\n            touchStart(swiper) {\n              isTouched = true;\n              autoplayTouchPaused = false;\n              touchStartTime = new Date().getTime();\n              touchStartTimeout = setTimeout(() => {\n                autoplayTouchPaused = true;\n                pauseAutoplay(swiper);\n              }, 200);\n            },\n            touchEnd(swiper) {\n              clearTimeout(touchStartTimeout);\n              if (activeSubSwiperIndex !== subSwiperIndex) return;\n              if (!isTouched) {\n                return;\n              }\n              touchHoldDuration = new Date().getTime() - touchStartTime;\n              if (autoplayTouchPaused) resumeAutoPlay(swiper);\n              autoplayTouchPaused = false;\n              isTouched = false;\n            },\n            init(swiper) {\n              if (!enabled) return;\n              if (activeSubSwiperIndex !== subSwiperIndex) {\n                stopAutoplay(swiper);\n              } else {\n                requestAnimationFrame(() => {\n                  onSubSwiperSlideChange(swiper);\n                });\n              }\n            },\n            slideChange(swiper) {\n              onSubSwiperSlideChange(swiper);\n            },\n          },\n        });\n\n        initSubSwiperPagination(subSwiperEl);\n\n        initSubSwiperNavigation(subSwiperEl, swiper);\n\n        subSwipers.push(swiper);\n      },\n    );\n  };\n\n  initMainSwiper();\n  initSubSwipers();\n\n  const enable = () => {\n    if (enabled) return;\n    subSwipers.forEach((subSwiper, subSwiperIndex) => {\n      if (subSwiperIndex === activeSubSwiperIndex) {\n        onSubSwiperSlideChange(subSwiper);\n      }\n    });\n  };\n\n  const disable = () => {\n    enabled = false;\n    subSwipers.forEach((subSwiper, subSwiperIndex) => {\n      if (subSwiperIndex === activeSubSwiperIndex) {\n        pauseAutoplay(subSwiper);\n      } else {\n        stopAutoplay(subSwiper);\n      }\n    });\n  };\n\n  const destroy = () => {\n    if (mainSwiper && mainSwiper.destroy) mainSwiper.destroy();\n    subSwipers.forEach((subSwiper) => {\n      stopAutoplay(subSwiper);\n      destroySubSwiperPagination(subSwiper);\n      destroySubSwiperNavigation(subSwiper);\n      if (subSwiper.destroy) subSwiper.destroy();\n    });\n  };\n\n  const slideTo = (mainIndex, subIndex) => {\n    if (mainSwiper && mainSwiper.slideTo && !mainSwiper.destroyed) {\n      mainSwiper.slideTo(mainIndex, 0);\n    }\n    if (typeof subIndex !== 'undefined') {\n      const subSwiper = subSwipers[mainIndex];\n      if (subSwiper.slideTo && !subSwiper.destroyed) {\n        if (subSwiper.activeIndex === subIndex) {\n          onSubSwiperSlideChange(subSwiper);\n        } else {\n          subSwiper.slideTo(subIndex, 0);\n        }\n      }\n    }\n  };\n\n  return { el, mainSwiper, subSwipers, destroy, slideTo, enable, disable };\n}\n"]}