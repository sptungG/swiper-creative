{"version":3,"sources":["../src/effect-slicer.esm.js"],"names":["swiper","extendParams","on","emit","slicerEffect","split","setTransition","duration","slides","forEach","slideEl","images","querySelectorAll","contentEl","querySelector","style","transitionDuration","imageEl","imageIndex","transitionTimingFunction","params","speed","length","activeIndex","$wrapperEl","eventTriggered","eq","find","transitionEnd","destroyed","animating","triggerEvents","i","trigger","effectVirtualTransitionEnd","effect","axis","direction","slideIndex","transform","slideProgress","progress","size","setTranslate","_s","classNames","push","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","spaceBetween","virtualTranslate","Object","assign","originalParams","each","nextEl","nextElementSibling","cloneContainerEl","document","createElement","classList","add","div","appendChild","cloneNode","parentNode","insertBefore","translate","el","width","height","cloneEl","cloneElIndex","cloneImg","top","left"],"mappings":"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","file":"effect-slicer.min.js","sourcesContent":["export default function EffectSlicer({ swiper, extendParams, on, emit }) {\n  extendParams({\n    slicerEffect: {\n      split: 5,\n    },\n  });\n\n  function effectVirtualTransitionEnd({ duration }) {\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    if (duration !== 0) {\n      let eventTriggered = false;\n      const $transitionEndTarget = slides\n        .eq(activeIndex)\n        .find('.swiper-slicer-image-clone:nth-child(1)');\n\n      $transitionEndTarget.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  }\n\n  const createImages = () => {\n    swiper.slides.each((slideEl) => {\n      const imageEl = slideEl.querySelector('.swiper-slicer-image');\n      if (!imageEl) return;\n      const nextEl = imageEl.nextElementSibling;\n      const cloneContainerEl = document.createElement('div');\n      cloneContainerEl.classList.add('swiper-slicer-image-clones');\n      for (let i = 0; i < swiper.params.slicerEffect.split; i += 1) {\n        const div = document.createElement('div');\n        div.classList.add('swiper-slicer-image-clone');\n        div.appendChild(imageEl.cloneNode());\n        cloneContainerEl.appendChild(div);\n      }\n      if (nextEl) {\n        imageEl.parentNode.insertBefore(cloneContainerEl, nextEl);\n      } else {\n        imageEl.parentNode.appendChild(cloneContainerEl);\n      }\n    });\n  };\n\n  const setImages = () => {\n    swiper.el.querySelectorAll('.swiper-slicer-image').forEach((imageEl) => {\n      imageEl.style.width = `${swiper.width}px`;\n      imageEl.style.height = `${swiper.height}px`;\n    });\n    swiper.el.querySelectorAll('.swiper-slide').forEach((slideEl) => {\n      slideEl\n        .querySelectorAll('.swiper-slicer-image-clone')\n        .forEach((cloneEl, cloneElIndex) => {\n          const cloneImg = cloneEl.querySelector('.swiper-slicer-image');\n          if (swiper.params.direction === 'horizontal') {\n            cloneEl.style.height = `${100 / swiper.params.slicerEffect.split}%`;\n            cloneEl.style.top = `${\n              (100 / swiper.params.slicerEffect.split) * cloneElIndex\n            }%`;\n            cloneImg.style.top = `-${100 * cloneElIndex}%`;\n          } else {\n            cloneEl.style.width = `${100 / swiper.params.slicerEffect.split}%`;\n            cloneEl.style.left = `${\n              (100 / swiper.params.slicerEffect.split) * cloneElIndex\n            }%`;\n            cloneImg.style.left = `-${100 * cloneElIndex}%`;\n          }\n        });\n    });\n  };\n\n  const setTranslate = () => {\n    const axis = swiper.params.direction === 'vertical' ? 'Y' : 'X';\n    swiper.slides.forEach((slideEl, slideIndex) => {\n      slideEl.style.transform = `translate${axis}(-${slideIndex * 100}%)`;\n      const slideProgress = slideEl.progress;\n      const contentEl = slideEl.querySelector('.swiper-slide-content');\n      if (contentEl) {\n        contentEl.style.transform = `translate${axis}(${\n          swiper.size * -slideProgress * 1.2\n        }px)`;\n      }\n      const images = slideEl.querySelectorAll('.swiper-slicer-image-clone');\n      images.forEach((imageEl) => {\n        const progress = -slideProgress;\n        imageEl.style.transform = `translate${axis}(${progress * 100}%)`;\n      });\n    });\n  };\n\n  const setTransition = (duration) => {\n    swiper.slides.forEach((slideEl) => {\n      const images = slideEl.querySelectorAll('.swiper-slicer-image-clone');\n      const contentEl = slideEl.querySelector('.swiper-slide-content');\n      if (contentEl) {\n        contentEl.style.transitionDuration = `${duration}ms`;\n      }\n      // eslint-disable-next-line\n\n      images.forEach((imageEl, imageIndex) => {\n        if (duration === 0) {\n          imageEl.style.transitionTimingFunction = 'ease-out';\n          imageEl.style.transitionDuration = `${\n            swiper.params.speed +\n            (swiper.params.speed / (images.length - 1)) *\n              (images.length - imageIndex - 1)\n          }ms`;\n        } else {\n          imageEl.style.transitionTimingFunction = '';\n          imageEl.style.transitionDuration = `${\n            duration +\n            (duration / (images.length - 1)) * (images.length - imageIndex - 1)\n          }ms`;\n        }\n      });\n    });\n\n    effectVirtualTransitionEnd({ duration });\n  };\n\n  on('setTranslate', () => {\n    if (swiper.params.effect !== 'slicer') return;\n\n    setTranslate();\n  });\n\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== 'slicer') return;\n    setTransition(duration);\n  });\n\n  on('beforeInit', () => {\n    if (swiper.params.effect !== 'slicer') return;\n\n    swiper.classNames.push('swiper-slicer');\n\n    const overwriteParams = {\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: true,\n    };\n\n    Object.assign(swiper.params, overwriteParams);\n    Object.assign(swiper.originalParams, overwriteParams);\n  });\n  on('init', () => {\n    if (swiper.params.effect !== 'slicer') return;\n    createImages();\n    emit('setTranslate', swiper, swiper.translate);\n  });\n\n  on('resize init', () => {\n    if (swiper.params.effect !== 'slicer') return;\n    setImages();\n  });\n}\n"]}